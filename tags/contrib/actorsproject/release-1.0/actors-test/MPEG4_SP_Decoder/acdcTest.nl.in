network acdcTest() ==> :

var
	MAXW_IN_MB = 121;
	MAXH_IN_MB = 69;
	
	ADDR_SZ = 24;
	PIX_SZ = 9;
	MV_SZ = 9;
	SAMPLE_COUNT_SZ = 8;
	SAMPLE_SZ = 13;
	MB_COORD_SZ = 8;
	BTYPE_SZ = 12;

	NEWVOP = 2048;
	INTRA = 1024;
	INTER = 512;
	QUANT_MASK = 31;
	ROUND_TYPE = 32;
	FCODE_MASK = 448;
	FCODE_SHIFT = 6;
	ACPRED = 1;
	ACCODED = 2;
	FOURMV = 4;
	MOTION = 8;
	QUANT_SZ = 6;
	
	scs = 8;

entities

        sourceBTYPE = art_Source_txt(fileName = "@datadir@/actors-test/MPEG4_SP_Decoder/input/acdcTest/BTYPE.txt");

        sourceB = art_Source_txt(fileName = "@datadir@/actors-test/MPEG4_SP_Decoder/input/acdcTest/B.gold");

        acdc = acdc(
		MAXW_IN_MB = MAXW_IN_MB,
		MB_COORD_SZ = MB_COORD_SZ,
		BTYPE_SZ = BTYPE_SZ,
		SAMPLE_SZ = SAMPLE_SZ,
		NEWVOP = NEWVOP,
		INTRA = INTRA,
		INTER = INTER,
		QUANT_MASK = QUANT_MASK,
		ROUND_TYPE = ROUND_TYPE,
		FCODE_MASK = FCODE_MASK,
		FCODE_SHIFT = FCODE_SHIFT,
		MOTION = MOTION,
		ACPRED = ACPRED,
		ACCODED = ACCODED,
		QUANT_SZ = QUANT_SZ
	);

        sinkOut = art_Sink_txt(fileName = "./output/acdcTest/out.txt");

        sinkSigned = art_Sink_txt(fileName = "./output/acdcTest/signed.txt");


structure
        sourceBTYPE.Out --> acdc.BTYPE;
        sourceB.Out --> acdc.data;

        acdc.out --> sinkOut.In;
        acdc.signed --> sinkSigned.In;
end
