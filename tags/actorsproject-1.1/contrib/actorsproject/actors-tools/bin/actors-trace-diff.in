#!/usr/bin/env bash

# -----------------------------------------------------------------------------
# Tool to find differences between two traces
# -----------------------------------------------------------------------------

# Copyright (c) Ericsson AB, 2009
# Author: Patrik Persson <patrik.j.persson@ericsson.com>
# All rights reserved.
#
# License terms:
#
# Redistribution and use in source and binary forms, 
# with or without modification, are permitted provided 
# that the following conditions are met:
#     * Redistributions of source code must retain the above 
#       copyright notice, this list of conditions and the 
#       following disclaimer.
#     * Redistributions in binary form must reproduce the 
#       above copyright notice, this list of conditions and 
#       the following disclaimer in the documentation and/or 
#       other materials provided with the distribution.
#     * Neither the name of the copyright holder nor the names 
#       of its contributors may be used to endorse or promote 
#       products derived from this software without specific 
#       prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

function fail()
{
    echo "$*"
    exit 1
}

[ $# -eq 2 ] || fail "Usage: $(basename $0) <trace1.xml> <trace2.xml>"

# -----------------------------------------------------------------------------

TMPDIR=./actors-trace-diff-output
TRACE_SPLIT=@bindir@/actors-trace-split
DIFF_OPTS="--ignore-space-change --text"

FILE1="$1"
[ -e "$FILE1" ] || fail "cannot open $FILE1"

FILE2="$2"
[ -e "$FILE2" ] || fail "cannot open $FILE2"

DIR1="$TMPDIR"/$(basename "$FILE1" .xml)
DIR2="$TMPDIR"/$(basename "$FILE2" .xml)

# Temporary files used in comparison phase below
TMPFILE1=$TMPDIR/.tmp1
TMPFILE2=$TMPDIR/.tmp2

rm -rf "$DIR1" "$DIR2" "$TMPFILE1" "$TMPFILE2"

# -----------------------------------------------------------------------------

echo -n splitting...
$TRACE_SPLIT "$FILE1" "$DIR1"
$TRACE_SPLIT "$FILE2" "$DIR2"

# -----------------------------------------------------------------------------

#
# Ensure the same files exist in both directories
#

echo -n checking...
for FILE in "$DIR1"/*; do
    F=$(basename "$FILE")
    [ -e "$DIR2/$F" ] || fail "missing $F in $FILE1"
done

for FILE in "$DIR2"/*; do
    F=$(basename "$FILE")
    [ -e "$DIR1/$F" ] || fail "missing $F in $FILE2"
done

# -----------------------------------------------------------------------------

#
# Compare individual files and see whether they are equal
#
# NOTE: When a difference is found, several iterations over the files are
#       made. This could be made more efficient. As long as the traces are
#       equal, two iterations are made of each file.
#

echo comparing...
COUNT=0
for FILE in "$DIR1"/*; do
    OTHER="$DIR2"/$(basename "$FILE")
    cut -d' ' -f1 < $FILE > $TMPFILE1
    cut -d' ' -f1 < $OTHER > $TMPFILE2
    diff --brief $DIFF_OPTS "$TMPFILE1" "$TMPFILE2" > /dev/null
    if [ $? != 0 ]; then
	COUNT=$(( COUNT + 1 ))

	# Identify the differing line
	LINE_NBR=$(diff $DIFF_OPTS "$TMPFILE1" "$TMPFILE2" \
	    | head -n1 \
	    | sed -e "s/[acd,].*//")

	# Pick out the differing action steps from FILE
	STEP1=$(head -n $(( LINE_NBR + 1 )) $FILE  | tail -n 1 | cut -d' ' -f2)
	STEP2=$(head -n $(( LINE_NBR + 1 )) $OTHER | tail -n 1 | cut -d' ' -f2)
	echo $(basename "$FILE") $STEP1 $STEP2
    fi
done

# -----------------------------------------------------------------------------

echo "-------------------------"
if [ $COUNT != 0 ]; then
    echo traces are NOT equivalent
else
    echo traces are equivalent
fi
echo "-------------------------"

exit $COUNT
