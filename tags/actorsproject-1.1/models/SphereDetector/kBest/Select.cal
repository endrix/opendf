
/**
 *  Select the best K elements from N consecutive inputs.
 *  better(x, y) is true iff x is better than y.
 *  
 *  
 *
 */

actor SelectK (N, K, better) In ==> Out, Ack :

	read := 0;
	
	best := [];
	
	action ==> Out: [old best] repeat K, Ack: [null]
	guard read = N 
	do
		read := 0;
		best := [];
	end

	action [x] ==>
	guard read < N
	do
		read := read + 1;
		insert(x);
	end			
	
	procedure insert(x) 
	var
		i := 0, j := #best,
		L = if #best < K then #best else #best - 1 end 
	begin
		while i < j do
			// keep it super-simple for now, do binary search at some point
			if better(best[i], x) then
				i := i + 1;
			else
				j := i;
			end
		end
		if i <= #best then
			best := [best[k] : for k in 0..i-1] 
			        + [x] 
			        + [best[k] : for k in i..L-1];		
		end
	end
	
end

