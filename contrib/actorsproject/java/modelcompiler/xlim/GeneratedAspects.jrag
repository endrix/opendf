/* -*-Java-*- */

// Automatically generated JastAdd aspects file 

import java.io.PrintStream;


aspect PrettyPrinter {
  public void ASTNode.prettyPrint(String indent, PrintStream pStream) {
    for (int i=0; i<getNumChild(); i++) {
      getChild(i).prettyPrint(indent,pStream);
    }
  }

  public void XmlHeader.prettyPrint(String indent, PrintStream pStream) {
    pStream.print("<?xml ");
    for (int i=0; i<getNumAttribute(); i++) {
      getAttribute(i).prettyPrint(indent,pStream);
    }
    pStream.println("?> ");
  }

  public void DocType.prettyPrint(String indent, PrintStream pStream) {
    pStream.print("<!");
    pStream.print(getSTRING());
    pStream.println();
  }

  public void AttrValue.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(getLITERAL());
  }

  public void Encoding.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" encoding=");
    getAttrValue().prettyPrint(indent,pStream);
  }

  public void Version.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" version=");
    getAttrValue().prettyPrint(indent,pStream);
  }

  public void XmlnsXsi.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" xmlns:xsi=");
    getAttrValue().prettyPrint(indent,pStream);
  }

  public void XsiNoNamespaceSchemaLocation.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" xsi:NoNamespaceSchemaLocation=");
    getAttrValue().prettyPrint(indent,pStream);
  }

  public void portName.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" portName=");
       getAttrValue().prettyPrint(indent,pStream);
  }

  public void module.prettyPrint(String ind, PrintStream pStream) {
    pStream.print(ind+"<module ");
    for (int i=0; i<getNumAttribute(); i++) {
      getAttribute(i).prettyPrint(ind,pStream);
    }
    if (getNumElement() == 0) {
       pStream.println("/> ");
    } else {
       pStream.println("> ");
       String newInd = ind+"  ";
       for (int i=0; i<getNumElement(); i++) {
          getElement(i).prettyPrint(newInd,pStream);
       }
       pStream.println(ind+"</module> ");
    }
  }

  public void note.prettyPrint(String ind, PrintStream pStream) {
    pStream.print(ind+"<note ");
    for (int i=0; i<getNumAttribute(); i++) {
      getAttribute(i).prettyPrint(ind,pStream);
    }
    if (getNumElement() == 0) {
       pStream.println("/> ");
    } else {
       pStream.println("> ");
       String newInd = ind+"  ";
       for (int i=0; i<getNumElement(); i++) {
          getElement(i).prettyPrint(newInd,pStream);
       }
       pStream.println(ind+"</note> ");
    }
  }

  public void _sourceName.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" sourceName=");
       getAttrValue().prettyPrint(indent,pStream);
  }

  public void type.prettyPrint(String ind, PrintStream pStream) {
    pStream.print(ind+"<type ");
    for (int i=0; i<getNumAttribute(); i++) {
      getAttribute(i).prettyPrint(ind,pStream);
    }
    if (getNumElement() == 0) {
       pStream.println("/> ");
    } else {
       pStream.println("> ");
       String newInd = ind+"  ";
       for (int i=0; i<getNumElement(); i++) {
          getElement(i).prettyPrint(newInd,pStream);
       }
       pStream.println(ind+"</type> ");
    }
  }

  public void PHI.prettyPrint(String ind, PrintStream pStream) {
    pStream.print(ind+"<PHI ");
    for (int i=0; i<getNumAttribute(); i++) {
      getAttribute(i).prettyPrint(ind,pStream);
    }
    if (getNumElement() == 0) {
       pStream.println("/> ");
    } else {
       pStream.println("> ");
       String newInd = ind+"  ";
       for (int i=0; i<getNumElement(); i++) {
          getElement(i).prettyPrint(newInd,pStream);
       }
       pStream.println(ind+"</PHI> ");
    }
  }

  public void _kind.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" kind=");
       getAttrValue().prettyPrint(indent,pStream);
  }

  public void initValue.prettyPrint(String ind, PrintStream pStream) {
    pStream.print(ind+"<initValue ");
    for (int i=0; i<getNumAttribute(); i++) {
      getAttribute(i).prettyPrint(ind,pStream);
    }
    if (getNumElement() == 0) {
       pStream.println("/> ");
    } else {
       pStream.println("> ");
       String newInd = ind+"  ";
       for (int i=0; i<getNumElement(); i++) {
          getElement(i).prettyPrint(newInd,pStream);
       }
       pStream.println(ind+"</initValue> ");
    }
  }

  public void typeDef.prettyPrint(String ind, PrintStream pStream) {
    pStream.print(ind+"<typeDef ");
    for (int i=0; i<getNumAttribute(); i++) {
      getAttribute(i).prettyPrint(ind,pStream);
    }
    if (getNumElement() == 0) {
       pStream.println("/> ");
    } else {
       pStream.println("> ");
       String newInd = ind+"  ";
       for (int i=0; i<getNumElement(); i++) {
          getElement(i).prettyPrint(newInd,pStream);
       }
       pStream.println(ind+"</typeDef> ");
    }
  }

  public void typePar.prettyPrint(String ind, PrintStream pStream) {
    pStream.print(ind+"<typePar ");
    for (int i=0; i<getNumAttribute(); i++) {
      getAttribute(i).prettyPrint(ind,pStream);
    }
    if (getNumElement() == 0) {
       pStream.println("/> ");
    } else {
       pStream.println("> ");
       String newInd = ind+"  ";
       for (int i=0; i<getNumElement(); i++) {
          getElement(i).prettyPrint(newInd,pStream);
       }
       pStream.println(ind+"</typePar> ");
    }
  }

  public void _typeName.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" typeName=");
       getAttrValue().prettyPrint(indent,pStream);
  }

  public void port.prettyPrint(String ind, PrintStream pStream) {
    pStream.print(ind+"<port ");
    for (int i=0; i<getNumAttribute(); i++) {
      getAttribute(i).prettyPrint(ind,pStream);
    }
    if (getNumElement() == 0) {
       pStream.println("/> ");
    } else {
       pStream.println("> ");
       String newInd = ind+"  ";
       for (int i=0; i<getNumElement(); i++) {
          getElement(i).prettyPrint(newInd,pStream);
       }
       pStream.println(ind+"</port> ");
    }
  }

  public void decision.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" decision=");
       getAttrValue().prettyPrint(indent,pStream);
  }

  public void operation.prettyPrint(String ind, PrintStream pStream) {
    pStream.print(ind+"<operation ");
    for (int i=0; i<getNumAttribute(); i++) {
      getAttribute(i).prettyPrint(ind,pStream);
    }
    if (getNumElement() == 0) {
       pStream.println("/> ");
    } else {
       pStream.println("> ");
       String newInd = ind+"  ";
       for (int i=0; i<getNumElement(); i++) {
          getElement(i).prettyPrint(newInd,pStream);
       }
       pStream.println(ind+"</operation> ");
    }
  }

  public void design.prettyPrint(String ind, PrintStream pStream) {
    pStream.print(ind+"<design ");
    for (int i=0; i<getNumAttribute(); i++) {
      getAttribute(i).prettyPrint(ind,pStream);
    }
    if (getNumElement() == 0) {
       pStream.println("/> ");
    } else {
       pStream.println("> ");
       String newInd = ind+"  ";
       for (int i=0; i<getNumElement(); i++) {
          getElement(i).prettyPrint(newInd,pStream);
       }
       pStream.println(ind+"</design> ");
    }
  }

  public void stateVar.prettyPrint(String ind, PrintStream pStream) {
    pStream.print(ind+"<stateVar ");
    for (int i=0; i<getNumAttribute(); i++) {
      getAttribute(i).prettyPrint(ind,pStream);
    }
    if (getNumElement() == 0) {
       pStream.println("/> ");
    } else {
       pStream.println("> ");
       String newInd = ind+"  ";
       for (int i=0; i<getNumElement(); i++) {
          getElement(i).prettyPrint(newInd,pStream);
       }
       pStream.println(ind+"</stateVar> ");
    }
  }

  public void _size.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" size=");
       getAttrValue().prettyPrint(indent,pStream);
  }

  public void _dir.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" dir=");
       getAttrValue().prettyPrint(indent,pStream);
  }

  public void source.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" source=");
       getAttrValue().prettyPrint(indent,pStream);
  }

  public void _value.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" value=");
       getAttrValue().prettyPrint(indent,pStream);
  }

  public void actor_port.prettyPrint(String ind, PrintStream pStream) {
    pStream.print(ind+"<actor-port ");
    for (int i=0; i<getNumAttribute(); i++) {
      getAttribute(i).prettyPrint(ind,pStream);
    }
    if (getNumElement() == 0) {
       pStream.println("/> ");
    } else {
       pStream.println("> ");
       String newInd = ind+"  ";
       for (int i=0; i<getNumElement(); i++) {
          getElement(i).prettyPrint(newInd,pStream);
       }
       pStream.println(ind+"</actor-port> ");
    }
  }

  public void qualifier.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" qualifier=");
       getAttrValue().prettyPrint(indent,pStream);
  }

  public void style.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" style=");
       getAttrValue().prettyPrint(indent,pStream);
  }

  public void removable.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" removable=");
       getAttrValue().prettyPrint(indent,pStream);
  }

  public void autostart.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" autostart=");
       getAttrValue().prettyPrint(indent,pStream);
  }

  public void target.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" target=");
       getAttrValue().prettyPrint(indent,pStream);
  }

  public void valuePar.prettyPrint(String ind, PrintStream pStream) {
    pStream.print(ind+"<valuePar ");
    for (int i=0; i<getNumAttribute(); i++) {
      getAttribute(i).prettyPrint(ind,pStream);
    }
    if (getNumElement() == 0) {
       pStream.println("/> ");
    } else {
       pStream.println("> ");
       String newInd = ind+"  ";
       for (int i=0; i<getNumElement(); i++) {
          getElement(i).prettyPrint(newInd,pStream);
       }
       pStream.println(ind+"</valuePar> ");
    }
  }

  public void _name.prettyPrint(String indent, PrintStream pStream) {
    pStream.print(" name=");
       getAttrValue().prettyPrint(indent,pStream);
  }

}

