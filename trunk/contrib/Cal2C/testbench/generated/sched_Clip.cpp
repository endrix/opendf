#include <systemc.h>
#include <tlm.h>
#include "sched_Clip.h"

#ifdef __cplusplus
extern "C" {
#endif
/* Generated by CIL v. 1.3.6 */
/* print_CIL_Input is false */

struct Clip_variables {
   int sflag ;
   int count ;
};
int currentSystemTime(void) ;
int openFile(char *file_name ) ;
void picture_displayImage(void) ;
void picture_setPixel(int x , int y , int r , int g , int b ) ;
int readByte(int fd ) ;
int JFrame(char *title ) ;
int Picture(int width , int height ) ;
void Clip_limit_max(struct Clip_variables *_actor_variables , int i , int *O ) ;
void Clip_limit_min(struct Clip_variables *_actor_variables , int i , int *O ) ;
void Clip_limit_none(struct Clip_variables *_actor_variables , int i , int *O ) ;
void Clip_limit_zero(struct Clip_variables *_actor_variables , int i , int *O ) ;
void Clip_read_signed(struct Clip_variables *_actor_variables , int s ) ;

#ifdef __cplusplus
}
#endif

void sched_Clip::process() {
/* Generated by CIL v. 1.3.6 */
/* print_CIL_Input is false */

 
{ int _out_1 ;
  int _out_2 ;
  int _out_3 ;
  int _out_4 ;
  int _call_6 ;
  int _call_7 ;
  int _call_8 ;
  int _call_9 ;
  int _call_10 ;
  struct Clip_variables *_actor_variables ;

  {
  _actor_variables = (struct Clip_variables *)malloc(8);
  _actor_variables->count = -1;
  while (1) {
    if (SIGNED->used() >= 1 && _actor_variables->count < 0) {
      _call_6 = SIGNED->get();
      Clip_read_signed(_actor_variables, _call_6);
    } else {
      if (I->used() >= 1 && I->peek() > 255) {
        _call_7 = I->get();
        Clip_limit_max(_actor_variables, _call_7, & _out_4);
        O->put(_out_4);
      } else {
        if (I->used() >= 1 && (! _actor_variables->sflag && I->peek() < 0)) {
          _call_8 = I->get();
          Clip_limit_zero(_actor_variables, _call_8, & _out_3);
          O->put(_out_3);
        } else {
          if (I->used() >= 1 && I->peek() < - 255) {
            _call_9 = I->get();
            Clip_limit_min(_actor_variables, _call_9, & _out_2);
            O->put(_out_2);
          } else {
            if (I->used() >= 1) {
              _call_10 = I->get();
              Clip_limit_none(_actor_variables, _call_10, & _out_1);
              O->put(_out_1);
            } else {
              wait(I->ok_to_get() | SIGNED->ok_to_get());
            }
          }
        }
      }
    }
  }
}
}

}
