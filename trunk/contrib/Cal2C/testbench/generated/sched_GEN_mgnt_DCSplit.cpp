#include <systemc.h>
#include <tlm.h>
#include "sched_GEN_mgnt_DCSplit.h"

#ifdef __cplusplus
extern "C" {
#endif
/* Generated by CIL v. 1.3.6 */
/* print_CIL_Input is false */

struct GEN_mgnt_DCSplit_variables {
   int count ;
};
void libcal_printf(char const   *format  , ...) ;
// To enable traces, change 1 by 0 in the #if below
#if 1
#define libcal_printf //
#endif
int currentSystemTime(void) ;
int openFile(char *file_name ) ;
void picture_displayImage(void) ;
void picture_setPixel(int x , int y , int r , int g , int b ) ;
int readByte(int fd ) ;
int JFrame(char *title ) ;
int Picture(int width , int height ) ;
void GEN_mgnt_DCSplit_ac(struct GEN_mgnt_DCSplit_variables *_actor_variables , int x ,
                         int *AC ) ;
void GEN_mgnt_DCSplit_dc(struct GEN_mgnt_DCSplit_variables *_actor_variables , int x ,
                         int *DC ) ;

#ifdef __cplusplus
}
#endif

void sched_GEN_mgnt_DCSplit::process() {
/* Generated by CIL v. 1.3.6 */
/* print_CIL_Input is false */

 
{ int _token_1 ;
  int _out_1 ;
  int _token_2 ;
  int _out_2 ;
  int _call_6 ;
  int _call_7 ;
  struct GEN_mgnt_DCSplit_variables *_actor_variables ;

  {
  _actor_variables = (struct GEN_mgnt_DCSplit_variables *)malloc(4);
  _actor_variables->count = 0;
  while (1) {
    if (_actor_variables->count == 0) {
      libcal_printf("action GEN_mgnt_DCSplit_dc: get from in\n");
      _call_6 = in->get();
      _token_2 = _call_6;
      libcal_printf("action GEN_mgnt_DCSplit_dc: got %i from in\n", _token_2);
      GEN_mgnt_DCSplit_dc(_actor_variables, _token_2, & _out_2);
      libcal_printf("action GEN_mgnt_DCSplit_dc: put value %i to DC\n", _out_2);
      DC->put(_out_2);
      libcal_printf("action GEN_mgnt_DCSplit_dc: put to DC OK\n");
    } else {
      libcal_printf("action GEN_mgnt_DCSplit_ac: get from in\n");
      _call_7 = in->get();
      _token_1 = _call_7;
      libcal_printf("action GEN_mgnt_DCSplit_ac: got %i from in\n", _token_1);
      GEN_mgnt_DCSplit_ac(_actor_variables, _token_1, & _out_1);
      libcal_printf("action GEN_mgnt_DCSplit_ac: put value %i to AC\n", _out_1);
      AC->put(_out_1);
      libcal_printf("action GEN_mgnt_DCSplit_ac: put to AC OK\n");
    }
  }
}
}

}
