// variableChecks.cal

actor variableChecks( goodParam, paramDuplicatedByStateVar,
  paramShadowedByLocalVar,
  paramShadowedByGenerator ) inPort ==> outPort :

  stateVarGood;
  
  paramDuplicatedByStateVar;

  stateVarShadowedByProcArg;
  stateVarShadowedByFuncArg;
  stateVarShadowedByLocalVar;
  stateVarShadowedByToken;
  stateVarShadowedByGenerator;
  stateVarShadowedByLetVar;

  stateVarDuplicated;
  stateVarDuplicated;

  stateVarDuplicatedByFunction;
  stateVarDuplicatedByProcedure;

  function functionGood( functionArgGood,
                         functionArgDuplicated,
                         functionArgDuplicated,
                         stateVarShadowedByFuncArg ) :
    0
  end
  
  function stateVarDuplicatedByFunction( functionArgGood ) :
    0
  end

  function functionDuplicated( functionArgGood ) :
    0
  end
  
  function functionDuplicated( functionArgGood ) :
    0
  end
  
  procedure stateVarDuplicatedByProcedure( functionArgGood )
  begin
    stateVarGood := 0;
  end

  procedure procedureDuplicated( functionArgGood )
  begin
    stateVarGood := 0;
  end
 
  procedure procedureDuplicated( functionArgGood )
  begin
    stateVarGood := 0;
  end
   
  someAction: action inPort:[ localVarDuplicatesToken,
                  goodToken,
                  stateVarShadowedByToken,
                  localFunctionDuplicatesToken,
                  localProcedureDuplicatesToken ] ==>
  var
    localVarGood,
    localVarDuplicatesToken,
    localVarDuplicated,
    localVarDuplicated,
    localVarDuplicatedByFunction,
    localVarDuplicatedByProcedure,
    stateVarShadowedByLocalVar,
    localVarShadowedByGenerator,
    localVarShadowedByLetVar,
    list = [ let stateVarShadowedByLetVar = 0 : 0 end : 
                 for generatorGood in Integers(1,10),
                 for localVarShadowedByGenerator in Integers(1,10),
                 for stateVarShadowedByGenerator in Integers(1,10),
                 for generatorDuplicated in Integers(1,10),
                 for generatorDuplicated in Integers(1,10),
                 for paramShadowedByGenerator in Integers(1,10) ],
    function localFunctionDuplicated( functionArgGood ) :
      0
    end,
    function localFunctionDuplicated( functionArgGood ) :
      0
    end,
    procedure LocalprocedureDuplicated( functionArgGood )
    begin
      stateVarGood := 0;
    end,
    procedure LocalprocedureDuplicated( functionArgGood )
    begin
      stateVarGood := 0;
    end,
    function localVarDuplicatedByFunction( functionArgGood ) :
      0
    end,
    procedure localVarDuplicatedByProcedure( functionArgGood )
    begin
      stateVarGood := 0;
    end,
    function localFunctionDuplicatesToken( functionArgGood ) :
      0
    end,
    procedure localProcedureDuplicatesToken( functionArgGood )
    begin
      stateVarGood := 0;
    end,
    paramShadowedByLocalVar
  end
  
  badBinaryOperator: action ==> outPort:[ 0 == 1 ] end
  badUnaryOperator:  action ==> outPort:[ = 1 ] end
  
  goodOperators: action ==>
  var
    a, b
  do
    a := a and b;
    a := a or b;
    a := a = b;
    a := a != b;
    a := a < b;
    a := a < b;
    // a := a in b;
    a := a + b;
    a := a - b;
    a := a div b;
    a := a mod b;
    a := a * b;
    a := a / b;
    a := a ^  b;
     
    a := not b;
    a := #b;
    a := dom b;
    // a := rng b;
    a := - b;
 
  end

end
