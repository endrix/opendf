# MPEG4_SP_Decoder module tests

# delete the built-in suffixes to avoid surprises
.SUFFIXES:   

# The path to the installed ACTOR-specific tools
export srcdir=@datadir@/actors-test/RVC_MPEG4_SP_Decoder

# Default definitions of tools and directories
include @datadir@/actors-make/definitions.mk

TITLE=RVC_MPEG4_SP_Decoder

# We currently use for(int i=...) for vector casts and thus need C99
override CFLAGS += -std=c99
export CFLAGS

ALL_TEST_MODELS=idct2dTest texture_16x16Test motionTest parserTest decoderTest

LOCAL_SKIP=$(filter $(SKIPPED_TEST_MODELS:$(TITLE)/%=%), $(ALL_TEST_MODELS))
RUN_TEST_MODELS=$(filter-out $(LOCAL_SKIP), $(ALL_TEST_MODELS))

.PHONY: all init clean

all: init report

report: $(ALL_TEST_MODELS:%=%.result)
	@if cat $^ | grep -q FAILED;                                 \
            then echo '***' $(TITLE) FAILED '***' > $@;              \
            else if [ -n "$(LOCAL_SKIP)" ];\
              then echo '***' $(TITLE) has SKIPPED tests '***' > $@; \
              else echo '***' $(TITLE) PASSED '***' > $@;            \
            fi; \
         fi
	@echo `cat $^ | grep -c PASSED` \
              'successful test(s) in' $(TITLE) >> $@
	@echo `cat $^ | grep -c FAILED`   \
              'failed test(s) in' $(TITLE) >> $@
	@echo $(words $(LOCAL_SKIP)) 'skipped test(s) in' $(TITLE) >> $@
	@echo >> $@
	@for model in $(RUN_TEST_MODELS); \
            do cat $${model}.result $${model}.diff >> $@; done
	@for model in $(LOCAL_SKIP); \
            do cat $${model}.result >> $@; done
	@echo
	@cat $@


$(RUN_TEST_MODELS:=.result): %.result : %
	@mkdir -p output/$*
	@./$*
	@if diff -q output/$* $(srcdir)/gold/$* > $*.diff; \
            then echo $(TITLE)/$*: PASSED > $@;  \
            else echo $(TITLE)/$*: FAILED > $@; fi
	@cat $*.result $*.diff

$(LOCAL_SKIP:=.result): %.result :
	@echo $(TITLE)/$*: SKIPPED > $@
	@cat $@

$(RUN_TEST_MODELS) decoderDemo:
	$(MAKE) -f $(ACTORS_MAKE)/makemodel.mk MODEL=$@ PRESERVE_C=Y

# decoderDemo is not actually a test (but we need a .result target)
.PHONY: decoderDemo.result

decoderDemo.result: decoderDemo

init:
	@rm -f report *.result *.diff

clean: init
	@rm -f $(ALL_TEST_MODELS) *.o *.c *.xlim
	@rm -f *.timestamp *.par *.depend *.xdf
	@rm -rf output
