#!/usr/bin/env python

# -----------------------------------------------------------------------------
# Split a trace into per-actor subsequences. Each subsequence is stored in a
# separate file.
# -----------------------------------------------------------------------------

# Copyright (c) Ericsson AB, 2009
# Author: Patrik Persson <patrik.j.persson@ericsson.com>
# All rights reserved.
#
# License terms:
#
# Redistribution and use in source and binary forms, 
# with or without modification, are permitted provided 
# that the following conditions are met:
#     * Redistributions of source code must retain the above 
#       copyright notice, this list of conditions and the 
#       following disclaimer.
#     * Redistributions in binary form must reproduce the 
#       above copyright notice, this list of conditions and 
#       the following disclaimer in the documentation and/or 
#       other materials provided with the distribution.
#     * Neither the name of the copyright holder nor the names 
#       of its contributors may be used to endorse or promote 
#       products derived from this software without specific 
#       prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import sys
import os.path
import xml.sax

# -----------------------------------------------------------------------------

class FilterHandler(xml.sax.handler.ContentHandler):
    def __init__(self, outdir):
        xml.sax.handler.ContentHandler.__init__(self)
        self.outdir = os.path.abspath(outdir)
        self.actions_to_files = {}

        if not os.path.isdir(self.outdir): os.makedirs(self.outdir)

    def startElement(self, name, attrs): 
        if name == 'actor':
            actor_name = attrs['class']
            filename = '%s-%s' % (attrs['id'], attrs['class'])
            self.curr_file = open(os.path.join(self.outdir, filename), 'w')
        elif name == 'action':
            action_id = int(attrs['id'])
            self.actions_to_files[action_id] = self.curr_file
        elif name == 'trace':
            action_id = int(attrs['action']) 
            self.actions_to_files[action_id].write("<trace action=%d/>\n"
                                                   % action_id)

# -----------------------------------------------------------------------------

if len(sys.argv) != 3:
    print "usage: trace-split <trace.xml> <output-directory>"
    sys.exit(1)

file   = sys.argv[1]
outdir = sys.argv[2]

handler = FilterHandler(outdir)

xml.sax.parse(file, handler)
